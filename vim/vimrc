set nocompatible " This must be first, because it changes other options

filetype off " Required for Vundle setup
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Vundle bundles
" let Vundle manage Vundle
Bundle 'gmarik/vundle'

" Github repos user/repo
Bundle 'airblade/vim-gitgutter'
Bundle 'airblade/vim-rooter'
Bundle 'altercation/vim-colors-solarized'
Bundle 'ervandew/supertab'
Bundle 'itspriddle/vim-marked'
Bundle 'Lokaltog/vim-powerline'
Bundle 'mattn/gist-vim'
Bundle 'mikewest/vimroom'
Bundle 'msanders/cocoa.vim'
Bundle 'scrooloose/nerdtree'
Bundle 'skwp/vim-rspec'
Bundle 'Townk/vim-autoclose'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-haml'
Bundle 'tpope/vim-markdown'
Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-rake'
Bundle 'tpope/vim-surround'
Bundle 'vim-ruby/vim-ruby'
Bundle 'vim-scripts/cpp.vim--Skvirsky'

" Vim script repos
Bundle 'cf.vim'

filetype plugin indent on " Re-enable after Vundle setup
syntax enable " Enable vim syntax highlighting as is (enable != on)

" http://stackoverflow.com/questions/10507344/get-vim-to-modify-the-file-instead-of-moving-the-new-version-on-it
" http://www.jamison.org/2009/10/03/how-to-fix-the-crontab-no-changes-made-to-crontab-error-using-vim-in-linux/
set backupcopy=yes " Allow vim to write crontab files

set shell=zsh " Set the default shell
set termencoding=utf-8 " Set the default encodings just in case $LANG isn't set
set encoding=utf-8 " Set the default encodings just in case $LANG isn't set
set autoindent " Indent the next line matching the previous line
set smartindent " Smart auto-indent when creating a new line
set cursorline " highlight current line
set tabstop=2 " Number of spaces each tab counts for
set shiftwidth=2 " The space << and >> moves the lines
set shiftround " Round << and >> to multiples of shiftwidth
set wildmenu " Better completion in the vim command line
set wildmode=longest,list,full " Completion settings
set expandtab " Insert spaces instead of actually tabs
set smarttab " Fancy tab settings I don't understand
set scrolloff=5 " The number of lines above and below
set history=200 " The number of history items to remember
set undolevels=200 " The number of undo items to remember
set backspace=indent,eol,start " Backspace settings
let &titleold=getcwd() " On quit reset title

let hour = strftime("%H") " Set the background light from 7am to 7pm
if 7 <= hour && hour < 19
	set background=light
else " Set to dark from 7pm to 7am
	set background=dark
endif
colorscheme solarized " Use the awesome solarized color scheme

set ttyfast " Set that we have a fast terminal
set noerrorbells " Don't make noise
set visualbell " Don't show bells
set autoread " watch for file changes and auto update
set showmatch " set show matching parenthesis
set number " Shows line numbers
set ruler " Shows current cursor location
set nrformats-=octal " Never use octal notation
set nolist " Don't show invisible characters
set mouse=a " enable using the mouse if terminal emulator
set hlsearch " Highlight search terms
set incsearch " Show searches as you type
set wrap " Softwrap text
set ignorecase " ignore case when searching
set smartcase " ignore case if search is lowercase, otherwise case-sensitive
set title " Change the terminal's title
set nobackup " Don't keep backup files
set noswapfile " Don't write swap files

if has("clipboard") " If the feature is available
	set clipboard=unnamed " copy to the system clipboard
endif

" Tab mappings
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" Press F4 to toggle highlighting on/off, and show current value.
:noremap <F4> :set hlsearch! hlsearch?<CR>

" http://vim.wikia.com/wiki/Toggle_auto-indenting_for_code_paste
nnoremap <F2> :set invpaste paste?<CR> " Toggle paste in normal mode
set pastetoggle=<F2> " Toggle paste in insert mode
set showmode " Display the mode when it changes

" Ruby syntax checking with F9
autocmd FileType ruby map <F9> :w<CR>:!ruby -c %<CR>

autocmd FileType objc setlocal tabstop=4 shiftwidth=4 expandtab
autocmd FileType objcpp setlocal tabstop=4 shiftwidth=4 expandtab
autocmd FileType c setlocal tabstop=4 shiftwidth=4 expandtab
autocmd FileType cpp setlocal tabstop=4 shiftwidth=4 expandtab
autocmd FileType make setlocal tabstop=4 shiftwidth=4 noexpandtab
autocmd FileType sh setlocal tabstop=4 shiftwidth=4 expandtab

autocmd BufNewFile,BufRead *.podspec set filetype=ruby
autocmd BufNewFile,BufRead Podfile set filetype=ruby

" Remap W to w http://stackoverflow.com/questions/3878692/aliasing-a-command-in-vim
cnoreabbrev <expr> W ((getcmdtype() is# ':' && getcmdline() is# 'W')?('w'):('W'))

" NERDTree
map <leader>nt :NERDTreeToggle<cr> " Toggle NERDTree command
let NERDTreeShowFiles=1 " Show files along with directories
let NERDTreeShowHidden=1 " Show hidden files
let NERDTreeQuitOnOpen=1 " Quit on opening files from the tree
let NERDTreeHighlightCursorline=1 " Highlight the selected entry in the tree

" Powerline
set laststatus=2 " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
set t_Co=256 " Explicitly tell Vim that the terminal supports 256 colors

" Vim Git Gutter
highlight clear SignColumn " Clear the background color of git-gutter
highlight clear LineNr " Clear the background color of the number bar
nnoremap <F3> :highlight clear SignColumn LineNr<CR> " Press F3 to clear all the background on the left
