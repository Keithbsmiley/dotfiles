#!/usr/bin/env python

"""
A simple script to give you a y/n/open prompt for unwatching repositories
You must have credentials in your ~/.netrc for api.github.com
This will go through each repo you are watching and allow you to unwatch it.

You can place repo names that you want to unwatch always in the IGNORES array.
These should be just the repo in username/repo

You can place users whos repos you never want to unwatch in VALID_USERS.
These should be just the username in username/repo
"""

import netrc
import requests
import webbrowser

WATCHING = "https://api.github.com/user/subscriptions?page=%s&per_page=100"
UNWATCH = "https://api.github.com/repos/%s/subscription"
HTML_URL = "https://github.com/%s"
NETRC_MACHINE = "api.github.com"
VALID_USERS = [
]

IGNORES = [
]


def credentials():
    n = netrc.netrc()
    auth = n.authenticators(NETRC_MACHINE)
    if auth is None:
        sys.exit("Add api.github.com to your ~/.netrc")

    user = auth[0] or auth[1]
    password = auth[2]

    if user is None or password is None:
        sys.exit("Invalid netrc entry for api.github.com")

    return user, password


def ask(repo):
    i = raw_input("Unwatch " + repo + " y/n/o: ").lower()[0]
    if i.startswith("o"):
        webbrowser.open(HTML_URL % repo)
        return ask(repo)
    else:
        return i.startswith("y")


def unwatch_chosen():
    user, password = credentials()
    json = []
    count = 1
    while True:
        url = WATCHING % count
        r = requests.get(url, auth=(user, password))
        j = r.json()
        if len(j) > 0:
            json += j
            count += 1
        else:
            break

    print("Asking about %s repos" % len(json))

    for repo in json:
        name = repo["full_name"]
        delete = None
        if name.split("/")[1].lower() in IGNORES:
            delete = True
        if name.split("/")[0].lower() in VALID_USERS:
            delete = False

        if delete is None:
            try:
                delete = ask(name)
            except KeyboardInterrupt:
                break

        if delete:
            url = UNWATCH % name
            requests.delete(url, auth=(user, password))

if __name__ == '__main__':
    unwatch_chosen()
