#compdef mix 
#autoload

# Elixir mix zsh completion
# from https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/mix/_mix

local -a _1st_arguments
_1st_arguments=(
  'archive:List all archives'
  'archive.build:Archive this project into a .ez file'
  'archive.install:Install an archive locally'
  'archive.uninstall:Uninstall archives'
  'clean:Delete generated application files'
  'cmd:Executes the given command'
  'compile:Compile source files'
  'compile.protocols:Consolidates all protocols in all paths'
  'deps:List dependencies and their status'
  "deps.clean:Remove the given dependencies' files"
  'deps.compile:Compile dependencies'
  'deps.get:Get all out of date dependencies'
  'deps.unlock:Unlock the given dependencies'
  'deps.update:Update the given dependencies'
  'do:Executes the tasks separated by comma'
  'escript.build:Builds an escript for the project'
  'help:Print help information for tasks'
  'loadconfig:Loads and persists the given configuration'
  'local:List local tasks'
  'local.hex:Install hex locally'
  'local.rebar:Install rebar locally'
  'new:Create a new Elixir project'
  'run:Run the given file or expression'
  "test:Run a project's tests"
  '--help:Describe available tasks'
  '--version:Prints the Elixir version information'
)

__task_list ()
{
  local expl
  declare -a tasks

  tasks=(archive clean compile deps deps.clean deps.compile deps.get deps.unlock deps.update do escriptize help local local.install local.rebar local.uninstall new run test)

  _wanted tasks expl 'help' compadd $tasks
}

local expl

local curcontext="$curcontext" state line
typeset -A opt_args

_arguments -C \
  ':command:->command' \
  '*::options:->options'

case $state in
  (command)
    _describe -t commands "mix subcommand" _1st_arguments
    return
  ;;

  (options)
    case $line[1] in
      (help)
         _arguments ':feature:__task_list' 
    esac
  ;;
esac

