settings set target.x86-disassembly-flavor intel
# Allow stepping in to code you don't have the debug symbols for
settings set target.process.thread.step-in-avoid-nodebug false
# Load local .lldbinit files
settings set target.load-cwd-lldbinit true

# Store a log of the session in /tmp for reference
settings set interpreter.save-session-directory /tmp/
settings set interpreter.save-session-on-quit True
settings set interpreter.open-transcript-in-editor False

# Add type summary for Unmanaged in Swift
type summary add --category swift --summary-string "Unmanaged Contains: ${var._value%@}" Swift.Unmanaged<AnyObject>

command script import ~/.lldbhelpers/aslr.py
command script import ~/.lldbhelpers/break_here.py
command script import ~/.lldbhelpers/breakpoints.py
command script import ~/.lldbhelpers/context.py
command script import ~/.lldbhelpers/delete_breakpoint.py
command script import ~/.lldbhelpers/function_address.py
command script import ~/.lldbhelpers/iblog.py
command script import ~/.lldbhelpers/keypath.py
command script import ~/.lldbhelpers/symbol_address.py
command script import ~/.lldbhelpers/load_swift.py

command regex fw 's/(.+)/expr -l objective-c -O -- @import %1/'

command alias rs process launch --stop-at-entry
command alias reveal expr -l objc++ -- (void*)dlopen("/Applications/Reveal.app/Contents/SharedSupport/iOS-Libraries/libReveal.dylib", 0x2); (void)[(NSNotificationCenter*)[NSNotificationCenter defaultCenter] postNotificationName:@"IBARevealRequestStart" object:nil];

# log enable -f /tmp/types.log lldb types
# log enable -f /tmp/dwarf.log dwarf all
# log enable -f /tmp/breakpoints.log lldb break
# log enable -f /tmp/all.log lldb all
# log enable -f /tmp/expr.log lldb expr

# The commands below are the same as importing these modules but avoiding
# some print statements telling you they've been installed
# command script import lldb.macosx.crashlog
# command script import lldb.macosx.heap
command script add -c lldb.macosx.crashlog.Symbolicate crashlog
command script add -f lldb.macosx.crashlog.save_crashlog save_crashlog
command script add -f lldb.macosx.heap.cstr_refs cstr_refs
command script add -f lldb.macosx.heap.find_variable find_variable
command script add -f lldb.macosx.heap.malloc_info malloc_info
command script add -f lldb.macosx.heap.objc_refs objc_refs
command script add -f lldb.macosx.heap.ptr_refs ptr_refs

command unalias p
command alias p dwim-print --persistent-result on --
